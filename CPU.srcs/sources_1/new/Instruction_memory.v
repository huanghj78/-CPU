`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2020/11/21 10:46:41
// Design Name: 
// Module Name: Instruction_memory
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Instruction_memory(input [31:0] PC,output reg [31:0] ins);
parameter a = 32'b00100000000010000000000000000100,
b = 32'b10001101000100010000000000000000,
c = 32'b10001101000100100000000000000100,
d = 32'b00000000000000001001100000100000,
e = 32'b00100010001100010000000000000001,
f = 32'b00010010001100100000000000000010,
g = 32'b00000010011100011001100000100000,
h = 32'b00001000000100000000000000000100,
i = 32'b00000010011100101001100000100010,
j = 32'b00001000000100000000000000000100,
k = 32'b00000010011100101001100000100010,
l = 32'b10101101000100110000000000001000,
m = 32'b10001101000100110000000000001000,
n = 32'b00001000000100000000000000001010;
always@(PC)begin
case(PC)
8'h00000004:ins <= 32'b00100000000010000000000000000100;
8'h00000008:ins <= 32'b10001101000100010000000000000000;
8'h0000000c:ins <= c;
8'h00000010:ins <= d;
8'h00000014:ins <= e;
8'h00000018:ins<=f;
8'h0000001c:ins<=g;
8'h00000020:ins<=h;
8'h00000024:ins<=i;
8'h00000028:ins<=j;
8'h0000002c:ins<=k;
8'h00000030:ins<=l;
8'h00000034:ins<=m;
8'h00000038:ins<=n;
endcase
end
endmodule
